<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="50" passed="47">
  <reporter-output>
    <line>
      <![CDATA[Test Case Name is: Verify 'Bangalore, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":77.6,"lat":12.98},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":303.68,"pressure":1012,"humidity":21,"temp_min":303.15,"temp_max":304.15},"visibility":10000,"wind":{"speed":4.1,"deg":110},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7823,"message":0.017,"country":"IN","sunrise":1520125422,"sunset":1520168336},"id":1277333,"name":"Bangalore","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Delhi, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":77.22,"lat":28.65},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":299.15,"pressure":1009,"humidity":36,"temp_min":299.15,"temp_max":299.15},"visibility":3500,"wind":{"speed":3.1,"deg":240},"clouds":{"all":75},"dt":1520164800,"sys":{"type":1,"id":7809,"message":0.0069,"country":"IN","sunrise":1520125971,"sunset":1520167984},"id":1273294,"name":"Delhi","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Agra, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":78.01,"lat":27.18},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03d"}],"base":"stations","main":{"temp":299.04,"pressure":1001.69,"humidity":43,"temp_min":299.04,"temp_max":299.04,"sea_level":1020.48,"grnd_level":1001.69},"wind":{"speed":4.26,"deg":288.003},"clouds":{"all":44},"dt":1520167317,"sys":{"message":0.0055,"country":"IN","sunrise":1520125734,"sunset":1520167839},"id":1279259,"name":"Agra","cod":200}]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Bareilly, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":79.41,"lat":28.35},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10n"}],"base":"stations","main":{"temp":293.715,"pressure":1003.23,"humidity":72,"temp_min":293.715,"temp_max":293.715,"sea_level":1022.39,"grnd_level":1003.23},"wind":{"speed":5.31,"deg":331.503},"rain":{"3h":0.3175},"clouds":{"all":68},"dt":1520167509,"sys":{"message":0.0173,"country":"IN","sunrise":1520125436,"sunset":1520167467},"id":1277013,"name":"Bareilly","cod":200}]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Indore, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":75.83,"lat":22.72},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":304.15,"pressure":1010,"humidity":27,"temp_min":304.15,"temp_max":304.15},"visibility":5000,"wind":{"speed":2.1,"deg":340},"clouds":{"all":40},"dt":1520164800,"sys":{"type":1,"id":7768,"message":0.0922,"country":"IN","sunrise":1520126121,"sunset":1520168495},"id":1269743,"name":"Indore","cod":200}]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Mumbai, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":72.85,"lat":19.01},"weather":[{"id":711,"main":"Smoke","description":"smoke","icon":"50d"}],"base":"stations","main":{"temp":302.65,"pressure":1007,"humidity":55,"temp_min":302.15,"temp_max":303.15},"visibility":3500,"wind":{"speed":3.6,"deg":300},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7761,"message":0.0914,"country":"IN","sunrise":1520126728,"sunset":1520169314},"id":1275339,"name":"Mumbai","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Gurgaon, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":77.03,"lat":28.47},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":299.15,"pressure":1009,"humidity":36,"temp_min":299.15,"temp_max":299.15},"visibility":3500,"wind":{"speed":3.1,"deg":240},"clouds":{"all":75},"dt":1520164800,"sys":{"type":1,"id":7809,"message":0.0066,"country":"IN","sunrise":1520126011,"sunset":1520168035},"id":1270642,"name":"Gurgaon","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Noida, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":77.35,"lat":28.57},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":299.15,"pressure":1009,"humidity":36,"temp_min":299.15,"temp_max":299.15},"visibility":3500,"wind":{"speed":3.1,"deg":240},"clouds":{"all":75},"dt":1520164800,"sys":{"type":1,"id":7809,"message":0.0093,"country":"IN","sunrise":1520125937,"sunset":1520167955},"id":7279746,"name":"Noida","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Mysore, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":76.65,"lat":12.31},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":304.54,"pressure":937.57,"humidity":21,"temp_min":304.54,"temp_max":304.54,"sea_level":1019.55,"grnd_level":937.57},"wind":{"speed":3.31,"deg":106.503},"clouds":{"all":0},"dt":1520167389,"sys":{"message":0.0051,"country":"IN","sunrise":1520125631,"sunset":1520168582},"id":1262321,"name":"Mysore","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Satna, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":80.83,"lat":24.58},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}],"base":"stations","main":{"temp":305.34,"pressure":982.64,"humidity":20,"temp_min":305.34,"temp_max":305.34,"sea_level":1019.63,"grnd_level":982.64},"wind":{"speed":4.11,"deg":280.503},"clouds":{"all":48},"dt":1520167482,"sys":{"message":0.0063,"country":"IN","sunrise":1520124978,"sunset":1520167240},"id":1257022,"name":"Satna","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Tirupati, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":79.42,"lat":13.63},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":304.515,"pressure":972.67,"humidity":24,"temp_min":304.515,"temp_max":304.515,"sea_level":1020.69,"grnd_level":972.67},"wind":{"speed":2.91,"deg":103.503},"clouds":{"all":0},"dt":1520167423,"sys":{"message":0.0043,"country":"IN","sunrise":1520125003,"sunset":1520167882},"id":1254360,"name":"Tirupati","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Patna, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":85.12,"lat":25.61},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50n"}],"base":"stations","main":{"temp":303.15,"pressure":1005,"humidity":51,"temp_min":303.15,"temp_max":303.15},"visibility":4000,"wind":{"speed":1.5,"deg":270},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7796,"message":0.0162,"country":"IN","sunrise":1520123980,"sunset":1520166180},"id":1260086,"name":"Patna","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Kolkata, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":88.35,"lat":22.57},"weather":[{"id":711,"main":"Smoke","description":"smoke","icon":"50n"}],"base":"stations","main":{"temp":305.15,"pressure":1006,"humidity":33,"temp_min":305.15,"temp_max":305.15},"visibility":3200,"wind":{"speed":2.6,"deg":160},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7784,"message":0.0052,"country":"IN","sunrise":1520123114,"sunset":1520165493},"id":1275004,"name":"Kolkata","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Ooty, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":76.7,"lat":11.41},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":302.565,"pressure":906.2,"humidity":23,"temp_min":302.565,"temp_max":302.565,"sea_level":1019.63,"grnd_level":906.2},"wind":{"speed":1.31,"deg":92.0031},"clouds":{"all":0},"dt":1520167518,"sys":{"message":0.0087,"country":"IN","sunrise":1520125595,"sunset":1520168593},"id":1253993,"name":"Ooty","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Hyderabad, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":78.47,"lat":17.36},"weather":[{"id":801,"main":"Clouds","description":"few clouds","icon":"02d"}],"base":"stations","main":{"temp":307.66,"pressure":1010,"humidity":23,"temp_min":307.15,"temp_max":308.15},"visibility":6000,"wind":{"speed":3.1,"deg":110},"clouds":{"all":12},"dt":1520164800,"sys":{"type":1,"id":7831,"message":0.0124,"country":"IN","sunrise":1520125334,"sunset":1520168011},"id":1269843,"name":"Hyderabad","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Lucknow, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":80.93,"lat":26.84},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":304.15,"pressure":1007,"humidity":48,"temp_min":304.15,"temp_max":304.15},"visibility":4000,"wind":{"speed":1},"clouds":{"all":20},"dt":1520164800,"sys":{"type":1,"id":7817,"message":0.0049,"country":"IN","sunrise":1520125023,"sunset":1520167149},"id":1264733,"name":"Lucknow","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Hisar, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":75.73,"lat":29.16},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"base":"stations","main":{"temp":292.34,"pressure":999.42,"humidity":80,"temp_min":292.34,"temp_max":292.34,"sea_level":1023.36,"grnd_level":999.42},"wind":{"speed":2.31,"deg":333.003},"rain":{"3h":0.675},"clouds":{"all":100},"dt":1520167343,"sys":{"message":0.006,"country":"IN","sunrise":1520126345,"sunset":1520168325},"id":1270022,"name":"Hisar","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Ahmedabad, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":72.58,"lat":23.02},"weather":[{"id":711,"main":"Smoke","description":"smoke","icon":"50d"}],"base":"stations","main":{"temp":307.15,"pressure":1008,"humidity":21,"temp_min":307.15,"temp_max":307.15},"visibility":6000,"wind":{"speed":1.5,"deg":360},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7758,"message":0.0075,"country":"IN","sunrise":1520126909,"sunset":1520169266},"id":1279233,"name":"Ahmedabad","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Bhubaneswar, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":85.84,"lat":20.26},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":306.15,"pressure":1006,"humidity":46,"temp_min":306.15,"temp_max":306.15},"visibility":5000,"wind":{"speed":6.2,"deg":200},"clouds":{"all":8},"dt":1520164800,"sys":{"type":1,"id":7783,"message":0.0072,"country":"IN","sunrise":1520123648,"sunset":1520166161},"id":1275817,"name":"Bhubaneswar","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Chennai, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":80.28,"lat":13.09},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":302.15,"pressure":1008,"humidity":54,"temp_min":302.15,"temp_max":302.15},"visibility":6000,"wind":{"speed":5.1,"deg":120},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7834,"message":0.009,"country":"IN","sunrise":1520124782,"sunset":1520167690},"id":1264527,"name":"Chennai","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Texas, AU' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":151.17,"lat":-28.86},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.59,"pressure":978.1,"humidity":93,"temp_min":293.59,"temp_max":293.59,"sea_level":1025.55,"grnd_level":978.1},"wind":{"speed":1.51,"deg":57.0031},"clouds":{"all":92},"dt":1520167523,"sys":{"message":0.009,"country":"AU","sunrise":1520106542,"sunset":1520151870},"id":2160132,"name":"Texas","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Chicago, US' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-87.62,"lat":41.88},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}],"base":"stations","main":{"temp":273.04,"pressure":1031,"humidity":74,"temp_min":272.15,"temp_max":274.15},"visibility":16093,"wind":{"speed":3.1,"deg":110},"clouds":{"all":1},"dt":1520165700,"sys":{"type":1,"id":966,"message":0.0399,"country":"US","sunrise":1520165980,"sunset":1520207100},"id":4887398,"name":"Chicago","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Houston, US' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-95.37,"lat":29.76},"weather":[{"id":701,"main":"Mist","description":"mist","icon":"50n"}],"base":"stations","main":{"temp":292.14,"pressure":1018,"humidity":94,"temp_min":290.15,"temp_max":294.15},"visibility":11265,"wind":{"speed":3.6,"deg":100,"gust":6.7},"clouds":{"all":90},"dt":1520166900,"sys":{"type":1,"id":2646,"message":0.0105,"country":"US","sunrise":1520167397,"sunset":1520209389},"id":4699066,"name":"Houston","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Los Angeles, US' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-118.24,"lat":34.05},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10n"},{"id":701,"main":"Mist","description":"mist","icon":"50n"}],"base":"stations","main":{"temp":279.54,"pressure":1021,"humidity":100,"temp_min":276.15,"temp_max":282.15},"visibility":2414,"wind":{"speed":1.31,"deg":354.003},"clouds":{"all":1},"dt":1520167080,"sys":{"type":1,"id":375,"message":0.0068,"country":"US","sunrise":1520173023,"sunset":1520214743},"id":5368361,"name":"Los Angeles","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Philadelphia, US' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-75.16,"lat":39.95},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"base":"stations","main":{"temp":275.88,"pressure":1022,"humidity":64,"temp_min":275.15,"temp_max":277.15},"visibility":16093,"wind":{"speed":7.2,"deg":330},"clouds":{"all":75},"dt":1520165700,"sys":{"type":1,"id":2359,"message":0.014,"country":"US","sunrise":1520162914,"sunset":1520204184},"id":4560349,"name":"Philadelphia","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Manchester, US' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-71.45,"lat":43},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"base":"stations","main":{"temp":276.05,"pressure":1019,"humidity":51,"temp_min":275.15,"temp_max":277.15},"visibility":16093,"wind":{"speed":4.6,"deg":10},"clouds":{"all":90},"dt":1520164560,"sys":{"type":1,"id":1949,"message":0.0181,"country":"US","sunrise":1520162153,"sunset":1520203169},"id":5089178,"name":"Manchester","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'London, GB' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-0.13,"lat":51.51},"weather":[{"id":521,"main":"Rain","description":"shower rain","icon":"09d"}],"base":"stations","main":{"temp":281.33,"pressure":990,"humidity":76,"temp_min":280.15,"temp_max":282.15},"visibility":10000,"wind":{"speed":4.1,"deg":160},"clouds":{"all":20},"dt":1520166000,"sys":{"type":1,"id":5091,"message":0.0077,"country":"GB","sunrise":1520145497,"sunset":1520185610},"id":2643743,"name":"London","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Edinburgh, GB' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-3.19,"lat":55.95},"weather":[{"id":620,"main":"Snow","description":"light shower snow","icon":"13d"}],"base":"stations","main":{"temp":274.86,"pressure":993,"humidity":98,"temp_min":274.15,"temp_max":275.15},"visibility":2000,"wind":{"speed":5.7,"deg":60},"clouds":{"all":75},"dt":1520166000,"sys":{"type":1,"id":5122,"message":0.0484,"country":"GB","sunrise":1520146530,"sunset":1520186055},"id":2650225,"name":"Edinburgh","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Birmingham, GB' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-1.89,"lat":52.48},"weather":[{"id":701,"main":"Mist","description":"mist","icon":"50d"},{"id":741,"main":"Fog","description":"fog","icon":"50d"}],"base":"stations","main":{"temp":278.62,"pressure":988,"humidity":100,"temp_min":276.15,"temp_max":283.15},"visibility":3800,"wind":{"speed":4.6,"deg":120},"clouds":{"all":90},"dt":1520166000,"sys":{"type":1,"id":5055,"message":0.051,"country":"GB","sunrise":1520145979,"sunset":1520185974},"id":2655603,"name":"Birmingham","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Glasgow, GB' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"coord":{"lon":-4.24,"lat":55.86},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"},{"id":600,"main":"Snow","description":"light snow","icon":"13d"}],"base":"stations","main":{"temp":275.14,"pressure":992,"humidity":97,"temp_min":274.15,"temp_max":276.15},"visibility":5000,"wind":{"speed":7.7,"deg":60},"clouds":{"all":90},"dt":1520166000,"sys":{"type":1,"id":5121,"message":0.0083,"country":"GB","sunrise":1520146774,"sunset":1520186314},"id":2648579,"name":"Glasgow","cod":200}]]>
    </line>
    <line>
      <![CDATA[Verified the Status code successfully]]>
    </line>
    <line>
      <![CDATA[Country code has verified successfully]]>
    </line>
    <line>
      <![CDATA[City name has verified successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Bang City, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC1, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC2, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC3, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC4, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC5, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC6, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC7, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'ABC8, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Tirupati, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Bangalore, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Delhi, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Agra, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Bareilly, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Indore, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Mumbai, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Gurgaon, IN' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Manchester, US' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Birmingham, GB' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
    <line>
      <![CDATA[Test Case Name is: Verify 'Glasgow, GB' City Info]]>
    </line>
    <line>
      <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
    </line>
    <line>
      <![CDATA[Verified the error message successfully]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="21398" started-at="2018-03-04T12:47:29Z" finished-at="2018-03-04T12:47:51Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="21398" started-at="2018-03-04T12:47:29Z" finished-at="2018-03-04T12:47:51Z">
      <class name="com.apitesting.TestAPI.TestWeatherAPIWithDataProvider">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="170" started-at="2018-03-04T18:17:30Z" finished-at="2018-03-04T18:17:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="4011" started-at="2018-03-04T18:17:31Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Bangalore, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Bangalore, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Bangalore, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":77.6,"lat":12.98},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":303.68,"pressure":1012,"humidity":21,"temp_min":303.15,"temp_max":304.15},"visibility":10000,"wind":{"speed":4.1,"deg":110},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7823,"message":0.017,"country":"IN","sunrise":1520125422,"sunset":1520168336},"id":1277333,"name":"Bangalore","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="721" started-at="2018-03-04T18:17:35Z" finished-at="2018-03-04T18:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Bangalore, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:35Z" finished-at="2018-03-04T18:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="337" started-at="2018-03-04T18:17:35Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Delhi, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Delhi, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Delhi, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":77.22,"lat":28.65},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":299.15,"pressure":1009,"humidity":36,"temp_min":299.15,"temp_max":299.15},"visibility":3500,"wind":{"speed":3.1,"deg":240},"clouds":{"all":75},"dt":1520164800,"sys":{"type":1,"id":7809,"message":0.0069,"country":"IN","sunrise":1520125971,"sunset":1520167984},"id":1273294,"name":"Delhi","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="205" started-at="2018-03-04T18:17:36Z" finished-at="2018-03-04T18:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Delhi, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="284" started-at="2018-03-04T18:17:36Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Agra, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=300, City Name=Agra, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:482)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:654)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:124)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:132)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(TestWeatherAPIWithDataProvider.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Agra, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":78.01,"lat":27.18},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03d"}],"base":"stations","main":{"temp":299.04,"pressure":1001.69,"humidity":43,"temp_min":299.04,"temp_max":299.04,"sea_level":1020.48,"grnd_level":1001.69},"wind":{"speed":4.26,"deg":288.003},"clouds":{"all":44},"dt":1520167317,"sys":{"message":0.0055,"country":"IN","sunrise":1520125734,"sunset":1520167839},"id":1279259,"name":"Agra","cod":200}]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:36Z" finished-at="2018-03-04T18:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="228" started-at="2018-03-04T18:17:36Z" finished-at="2018-03-04T18:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=FAILURE method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Agra, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:36Z" finished-at="2018-03-04T18:17:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="235" started-at="2018-03-04T18:17:36Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Bareilly, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=300, City Name=Bareilly, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:482)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:654)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:124)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:132)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(TestWeatherAPIWithDataProvider.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Bareilly, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":79.41,"lat":28.35},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10n"}],"base":"stations","main":{"temp":293.715,"pressure":1003.23,"humidity":72,"temp_min":293.715,"temp_max":293.715,"sea_level":1022.39,"grnd_level":1003.23},"wind":{"speed":5.31,"deg":331.503},"rain":{"3h":0.3175},"clouds":{"all":68},"dt":1520167509,"sys":{"message":0.0173,"country":"IN","sunrise":1520125436,"sunset":1520167467},"id":1277013,"name":"Bareilly","cod":200}]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="62" started-at="2018-03-04T18:17:37Z" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=FAILURE method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Bareilly, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:37Z" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="228" started-at="2018-03-04T18:17:37Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Indore, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=300, City Name=Indore, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:482)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:654)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:124)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:132)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(TestWeatherAPIWithDataProvider.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Indore, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":75.83,"lat":22.72},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":304.15,"pressure":1010,"humidity":27,"temp_min":304.15,"temp_max":304.15},"visibility":5000,"wind":{"speed":2.1,"deg":340},"clouds":{"all":40},"dt":1520164800,"sys":{"type":1,"id":7768,"message":0.0922,"country":"IN","sunrise":1520126121,"sunset":1520168495},"id":1269743,"name":"Indore","cod":200}]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="46" started-at="2018-03-04T18:17:37Z" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=FAILURE method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Indore, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:37Z" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="303" started-at="2018-03-04T18:17:37Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Mumbai, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Mumbai, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Mumbai, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":72.85,"lat":19.01},"weather":[{"id":711,"main":"Smoke","description":"smoke","icon":"50d"}],"base":"stations","main":{"temp":302.65,"pressure":1007,"humidity":55,"temp_min":302.15,"temp_max":303.15},"visibility":3500,"wind":{"speed":3.6,"deg":300},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7761,"message":0.0914,"country":"IN","sunrise":1520126728,"sunset":1520169314},"id":1275339,"name":"Mumbai","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="62" started-at="2018-03-04T18:17:37Z" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Mumbai, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:37Z" finished-at="2018-03-04T18:17:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="352" started-at="2018-03-04T18:17:37Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Gurgaon, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Gurgaon, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Gurgaon, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":77.03,"lat":28.47},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":299.15,"pressure":1009,"humidity":36,"temp_min":299.15,"temp_max":299.15},"visibility":3500,"wind":{"speed":3.1,"deg":240},"clouds":{"all":75},"dt":1520164800,"sys":{"type":1,"id":7809,"message":0.0066,"country":"IN","sunrise":1520126011,"sunset":1520168035},"id":1270642,"name":"Gurgaon","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="109" started-at="2018-03-04T18:17:38Z" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Gurgaon, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-04T18:17:38Z" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="272" started-at="2018-03-04T18:17:38Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Noida, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Noida, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Noida, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":77.35,"lat":28.57},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":299.15,"pressure":1009,"humidity":36,"temp_min":299.15,"temp_max":299.15},"visibility":3500,"wind":{"speed":3.1,"deg":240},"clouds":{"all":75},"dt":1520164800,"sys":{"type":1,"id":7809,"message":0.0093,"country":"IN","sunrise":1520125937,"sunset":1520167955},"id":7279746,"name":"Noida","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="80" started-at="2018-03-04T18:17:38Z" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Noida, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:38Z" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="265" started-at="2018-03-04T18:17:38Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Mysore, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Mysore, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Mysore, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":76.65,"lat":12.31},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":304.54,"pressure":937.57,"humidity":21,"temp_min":304.54,"temp_max":304.54,"sea_level":1019.55,"grnd_level":937.57},"wind":{"speed":3.31,"deg":106.503},"clouds":{"all":0},"dt":1520167389,"sys":{"message":0.0051,"country":"IN","sunrise":1520125631,"sunset":1520168582},"id":1262321,"name":"Mysore","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="116" started-at="2018-03-04T18:17:38Z" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Mysore, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:39Z" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="296" started-at="2018-03-04T18:17:39Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Satna, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Satna, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Satna, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":80.83,"lat":24.58},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}],"base":"stations","main":{"temp":305.34,"pressure":982.64,"humidity":20,"temp_min":305.34,"temp_max":305.34,"sea_level":1019.63,"grnd_level":982.64},"wind":{"speed":4.11,"deg":280.503},"clouds":{"all":48},"dt":1520167482,"sys":{"message":0.0063,"country":"IN","sunrise":1520124978,"sunset":1520167240},"id":1257022,"name":"Satna","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="93" started-at="2018-03-04T18:17:39Z" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Satna, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="313" started-at="2018-03-04T18:17:39Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Tirupati, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Tirupati, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Tirupati, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":79.42,"lat":13.63},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":304.515,"pressure":972.67,"humidity":24,"temp_min":304.515,"temp_max":304.515,"sea_level":1020.69,"grnd_level":972.67},"wind":{"speed":2.91,"deg":103.503},"clouds":{"all":0},"dt":1520167423,"sys":{"message":0.0043,"country":"IN","sunrise":1520125003,"sunset":1520167882},"id":1254360,"name":"Tirupati","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:39Z" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="51" started-at="2018-03-04T18:17:39Z" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Tirupati, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-04T18:17:39Z" finished-at="2018-03-04T18:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="295" started-at="2018-03-04T18:17:39Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Patna, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Patna, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Patna, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":85.12,"lat":25.61},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50n"}],"base":"stations","main":{"temp":303.15,"pressure":1005,"humidity":51,"temp_min":303.15,"temp_max":303.15},"visibility":4000,"wind":{"speed":1.5,"deg":270},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7796,"message":0.0162,"country":"IN","sunrise":1520123980,"sunset":1520166180},"id":1260086,"name":"Patna","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="85" started-at="2018-03-04T18:17:40Z" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Patna, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:40Z" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="263" started-at="2018-03-04T18:17:40Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Kolkata, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Kolkata, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Kolkata, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":88.35,"lat":22.57},"weather":[{"id":711,"main":"Smoke","description":"smoke","icon":"50n"}],"base":"stations","main":{"temp":305.15,"pressure":1006,"humidity":33,"temp_min":305.15,"temp_max":305.15},"visibility":3200,"wind":{"speed":2.6,"deg":160},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7784,"message":0.0052,"country":"IN","sunrise":1520123114,"sunset":1520165493},"id":1275004,"name":"Kolkata","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="78" started-at="2018-03-04T18:17:40Z" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Kolkata, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="230" started-at="2018-03-04T18:17:40Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Ooty, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Ooty, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Ooty, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":76.7,"lat":11.41},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":302.565,"pressure":906.2,"humidity":23,"temp_min":302.565,"temp_max":302.565,"sea_level":1019.63,"grnd_level":906.2},"wind":{"speed":1.31,"deg":92.0031},"clouds":{"all":0},"dt":1520167518,"sys":{"message":0.0087,"country":"IN","sunrise":1520125595,"sunset":1520168593},"id":1253993,"name":"Ooty","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:40Z" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="64" started-at="2018-03-04T18:17:40Z" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Ooty, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:40Z" finished-at="2018-03-04T18:17:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="275" started-at="2018-03-04T18:17:40Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Hyderabad, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Hyderabad, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Hyderabad, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":78.47,"lat":17.36},"weather":[{"id":801,"main":"Clouds","description":"few clouds","icon":"02d"}],"base":"stations","main":{"temp":307.66,"pressure":1010,"humidity":23,"temp_min":307.15,"temp_max":308.15},"visibility":6000,"wind":{"speed":3.1,"deg":110},"clouds":{"all":12},"dt":1520164800,"sys":{"type":1,"id":7831,"message":0.0124,"country":"IN","sunrise":1520125334,"sunset":1520168011},"id":1269843,"name":"Hyderabad","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="47" started-at="2018-03-04T18:17:41Z" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Hyderabad, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="269" started-at="2018-03-04T18:17:41Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Lucknow, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Lucknow, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Lucknow, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":80.93,"lat":26.84},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":304.15,"pressure":1007,"humidity":48,"temp_min":304.15,"temp_max":304.15},"visibility":4000,"wind":{"speed":1},"clouds":{"all":20},"dt":1520164800,"sys":{"type":1,"id":7817,"message":0.0049,"country":"IN","sunrise":1520125023,"sunset":1520167149},"id":1264733,"name":"Lucknow","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:41Z" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="42" started-at="2018-03-04T18:17:41Z" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Lucknow, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:41Z" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="232" started-at="2018-03-04T18:17:41Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Hisar, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Hisar, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Hisar, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":75.73,"lat":29.16},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"base":"stations","main":{"temp":292.34,"pressure":999.42,"humidity":80,"temp_min":292.34,"temp_max":292.34,"sea_level":1023.36,"grnd_level":999.42},"wind":{"speed":2.31,"deg":333.003},"rain":{"3h":0.675},"clouds":{"all":100},"dt":1520167343,"sys":{"message":0.006,"country":"IN","sunrise":1520126345,"sunset":1520168325},"id":1270022,"name":"Hisar","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:41Z" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Hisar, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2018-03-04T18:17:41Z" finished-at="2018-03-04T18:17:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="269" started-at="2018-03-04T18:17:41Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Ahmedabad, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Ahmedabad, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Ahmedabad, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":72.58,"lat":23.02},"weather":[{"id":711,"main":"Smoke","description":"smoke","icon":"50d"}],"base":"stations","main":{"temp":307.15,"pressure":1008,"humidity":21,"temp_min":307.15,"temp_max":307.15},"visibility":6000,"wind":{"speed":1.5,"deg":360},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7758,"message":0.0075,"country":"IN","sunrise":1520126909,"sunset":1520169266},"id":1279233,"name":"Ahmedabad","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="53" started-at="2018-03-04T18:17:42Z" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Ahmedabad, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="248" started-at="2018-03-04T18:17:42Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Bhubaneswar, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Bhubaneswar, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Bhubaneswar, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":85.84,"lat":20.26},"weather":[{"id":721,"main":"Haze","description":"haze","icon":"50d"}],"base":"stations","main":{"temp":306.15,"pressure":1006,"humidity":46,"temp_min":306.15,"temp_max":306.15},"visibility":5000,"wind":{"speed":6.2,"deg":200},"clouds":{"all":8},"dt":1520164800,"sys":{"type":1,"id":7783,"message":0.0072,"country":"IN","sunrise":1520123648,"sunset":1520166161},"id":1275817,"name":"Bhubaneswar","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:42Z" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="137" started-at="2018-03-04T18:17:42Z" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Bhubaneswar, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-04T18:17:42Z" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="251" started-at="2018-03-04T18:17:42Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Chennai, IN' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Chennai, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Chennai, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":80.28,"lat":13.09},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":302.15,"pressure":1008,"humidity":54,"temp_min":302.15,"temp_max":302.15},"visibility":6000,"wind":{"speed":5.1,"deg":120},"clouds":{"all":0},"dt":1520166600,"sys":{"type":1,"id":7834,"message":0.009,"country":"IN","sunrise":1520124782,"sunset":1520167690},"id":1264527,"name":"Chennai","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="75" started-at="2018-03-04T18:17:42Z" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Chennai, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:42Z" finished-at="2018-03-04T18:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="213" started-at="2018-03-04T18:17:42Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Texas, AU' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Texas, Country Code=AU}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Texas, AU' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":151.17,"lat":-28.86},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.59,"pressure":978.1,"humidity":93,"temp_min":293.59,"temp_max":293.59,"sea_level":1025.55,"grnd_level":978.1},"wind":{"speed":1.51,"deg":57.0031},"clouds":{"all":92},"dt":1520167523,"sys":{"message":0.009,"country":"AU","sunrise":1520106542,"sunset":1520151870},"id":2160132,"name":"Texas","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="55" started-at="2018-03-04T18:17:43Z" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Texas, AU' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="327" started-at="2018-03-04T18:17:43Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Chicago, US' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Chicago, Country Code=US}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Chicago, US' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-87.62,"lat":41.88},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}],"base":"stations","main":{"temp":273.04,"pressure":1031,"humidity":74,"temp_min":272.15,"temp_max":274.15},"visibility":16093,"wind":{"speed":3.1,"deg":110},"clouds":{"all":1},"dt":1520165700,"sys":{"type":1,"id":966,"message":0.0399,"country":"US","sunrise":1520165980,"sunset":1520207100},"id":4887398,"name":"Chicago","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:43Z" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="45" started-at="2018-03-04T18:17:43Z" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Chicago, US' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:43Z" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="245" started-at="2018-03-04T18:17:43Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Houston, US' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Houston, Country Code=US}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Houston, US' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-95.37,"lat":29.76},"weather":[{"id":701,"main":"Mist","description":"mist","icon":"50n"}],"base":"stations","main":{"temp":292.14,"pressure":1018,"humidity":94,"temp_min":290.15,"temp_max":294.15},"visibility":11265,"wind":{"speed":3.6,"deg":100,"gust":6.7},"clouds":{"all":90},"dt":1520166900,"sys":{"type":1,"id":2646,"message":0.0105,"country":"US","sunrise":1520167397,"sunset":1520209389},"id":4699066,"name":"Houston","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="45" started-at="2018-03-04T18:17:43Z" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Houston, US' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:43Z" finished-at="2018-03-04T18:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="278" started-at="2018-03-04T18:17:43Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Los Angeles, US' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Los Angeles, Country Code=US}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Los Angeles, US' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-118.24,"lat":34.05},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10n"},{"id":701,"main":"Mist","description":"mist","icon":"50n"}],"base":"stations","main":{"temp":279.54,"pressure":1021,"humidity":100,"temp_min":276.15,"temp_max":282.15},"visibility":2414,"wind":{"speed":1.31,"deg":354.003},"clouds":{"all":1},"dt":1520167080,"sys":{"type":1,"id":375,"message":0.0068,"country":"US","sunrise":1520173023,"sunset":1520214743},"id":5368361,"name":"Los Angeles","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="69" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Los Angeles, US' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="235" started-at="2018-03-04T18:17:44Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Philadelphia, US' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Philadelphia, Country Code=US}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Philadelphia, US' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-75.16,"lat":39.95},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"base":"stations","main":{"temp":275.88,"pressure":1022,"humidity":64,"temp_min":275.15,"temp_max":277.15},"visibility":16093,"wind":{"speed":7.2,"deg":330},"clouds":{"all":75},"dt":1520165700,"sys":{"type":1,"id":2359,"message":0.014,"country":"US","sunrise":1520162914,"sunset":1520204184},"id":4560349,"name":"Philadelphia","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="62" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Philadelphia, US' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="221" started-at="2018-03-04T18:17:44Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Manchester, US' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Manchester, Country Code=US}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Manchester, US' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-71.45,"lat":43},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"base":"stations","main":{"temp":276.05,"pressure":1019,"humidity":51,"temp_min":275.15,"temp_max":277.15},"visibility":16093,"wind":{"speed":4.6,"deg":10},"clouds":{"all":90},"dt":1520164560,"sys":{"type":1,"id":1949,"message":0.0181,"country":"US","sunrise":1520162153,"sunset":1520203169},"id":5089178,"name":"Manchester","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="38" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Manchester, US' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="235" started-at="2018-03-04T18:17:44Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'London, GB' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=London, Country Code=GB}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'London, GB' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-0.13,"lat":51.51},"weather":[{"id":521,"main":"Rain","description":"shower rain","icon":"09d"}],"base":"stations","main":{"temp":281.33,"pressure":990,"humidity":76,"temp_min":280.15,"temp_max":282.15},"visibility":10000,"wind":{"speed":4.1,"deg":160},"clouds":{"all":20},"dt":1520166000,"sys":{"type":1,"id":5091,"message":0.0077,"country":"GB","sunrise":1520145497,"sunset":1520185610},"id":2643743,"name":"London","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'London, GB' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:44Z" finished-at="2018-03-04T18:17:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="266" started-at="2018-03-04T18:17:44Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Edinburgh, GB' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Edinburgh, Country Code=GB}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Edinburgh, GB' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-3.19,"lat":55.95},"weather":[{"id":620,"main":"Snow","description":"light shower snow","icon":"13d"}],"base":"stations","main":{"temp":274.86,"pressure":993,"humidity":98,"temp_min":274.15,"temp_max":275.15},"visibility":2000,"wind":{"speed":5.7,"deg":60},"clouds":{"all":75},"dt":1520166000,"sys":{"type":1,"id":5122,"message":0.0484,"country":"GB","sunrise":1520146530,"sunset":1520186055},"id":2650225,"name":"Edinburgh","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="53" started-at="2018-03-04T18:17:45Z" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Edinburgh, GB' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:45Z" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="263" started-at="2018-03-04T18:17:45Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Birmingham, GB' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Birmingham, Country Code=GB}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Birmingham, GB' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-1.89,"lat":52.48},"weather":[{"id":701,"main":"Mist","description":"mist","icon":"50d"},{"id":741,"main":"Fog","description":"fog","icon":"50d"}],"base":"stations","main":{"temp":278.62,"pressure":988,"humidity":100,"temp_min":276.15,"temp_max":283.15},"visibility":3800,"wind":{"speed":4.6,"deg":120},"clouds":{"all":90},"dt":1520166000,"sys":{"type":1,"id":5055,"message":0.051,"country":"GB","sunrise":1520145979,"sunset":1520185974},"id":2655603,"name":"Birmingham","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="37" started-at="2018-03-04T18:17:45Z" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Birmingham, GB' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-04T18:17:45Z" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithPositiveData" duration-ms="215" started-at="2018-03-04T18:17:45Z" data-provider="PositiveTestScenarios" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Glasgow, GB' City Info, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=200, City Name=Glasgow, Country Code=GB}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Glasgow, GB' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"coord":{"lon":-4.24,"lat":55.86},"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"},{"id":600,"main":"Snow","description":"light snow","icon":"13d"}],"base":"stations","main":{"temp":275.14,"pressure":992,"humidity":97,"temp_min":274.15,"temp_max":276.15},"visibility":5000,"wind":{"speed":7.7,"deg":60},"clouds":{"all":90},"dt":1520166000,"sys":{"type":1,"id":5121,"message":0.0083,"country":"GB","sunrise":1520146774,"sunset":1520186314},"id":2648579,"name":"Glasgow","cod":200}]]>
            </line>
            <line>
              <![CDATA[Verified the Status code successfully]]>
            </line>
            <line>
              <![CDATA[Country code has verified successfully]]>
            </line>
            <line>
              <![CDATA[City name has verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithPositiveData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="47" started-at="2018-03-04T18:17:45Z" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithPositiveData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithPositiveData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Glasgow, GB' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:45Z" finished-at="2018-03-04T18:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="217" started-at="2018-03-04T18:17:45Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Bang City, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=Bang City, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Bang City, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Bang City, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="214" started-at="2018-03-04T18:17:46Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC1, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC1, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC1, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="36" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC1, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="201" started-at="2018-03-04T18:17:46Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC2, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC2, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC2, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="47" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC2, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="200" started-at="2018-03-04T18:17:46Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC3, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC3, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC3, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="38" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC3, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:46Z" finished-at="2018-03-04T18:17:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="238" started-at="2018-03-04T18:17:46Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC4, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC4, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC4, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="46" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC4, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="224" started-at="2018-03-04T18:17:47Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC5, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC5, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC5, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="53" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC5, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="201" started-at="2018-03-04T18:17:47Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC6, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC6, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC6, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC6, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="216" started-at="2018-03-04T18:17:47Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC7, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC7, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC7, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="36" started-at="2018-03-04T18:17:47Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC7, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="221" started-at="2018-03-04T18:17:48Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'ABC8, IN' City Info, Error Message=city not found, App ID=17e5c69afcef0f16365a6c3b0cba4400, Status Code=404, City Name=ABC8, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'ABC8, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":"404","message":"city not found"}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="47" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'ABC8, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="213" started-at="2018-03-04T18:17:48Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Tirupati, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0f16365a6c, Status Code=401, City Name=Tirupati, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Tirupati, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="22" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Tirupati, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="201" started-at="2018-03-04T18:17:48Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Bangalore, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0f16365a6c, Status Code=401, City Name=Bangalore, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Bangalore, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Bangalore, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="216" started-at="2018-03-04T18:17:48Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Delhi, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0f16365a6c, Status Code=401, City Name=Delhi, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Delhi, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="38" started-at="2018-03-04T18:17:48Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Delhi, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="201" started-at="2018-03-04T18:17:49Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Agra, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0f16365a6c, Status Code=401, City Name=Agra, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Agra, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Agra, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="269" started-at="2018-03-04T18:17:49Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Bareilly, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0fb0cba4400, Status Code=401, City Name=Bareilly, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Bareilly, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Bareilly, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="222" started-at="2018-03-04T18:17:49Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Indore, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0fb0cba4400, Status Code=401, City Name=Indore, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Indore, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="37" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Indore, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="201" started-at="2018-03-04T18:17:49Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Mumbai, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0fb0cba4400, Status Code=401, City Name=Mumbai, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Mumbai, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:49Z" finished-at="2018-03-04T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Mumbai, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="200" started-at="2018-03-04T18:17:50Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Gurgaon, IN' City Info, Error Message=Invalid API key, App ID=17e5c69afcef0fb0cba4400, Status Code=401, City Name=Gurgaon, Country Code=IN}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Gurgaon, IN' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="32" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Gurgaon, IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="169" started-at="2018-03-04T18:17:50Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Manchester, US' City Info, Error Message=Invalid API key, App ID=69afcef0f16365a6c3b0cba4400, Status Code=401, City Name=Manchester, Country Code=US}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Manchester, US' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Manchester, US' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="271" started-at="2018-03-04T18:17:50Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Birmingham, GB' City Info, Error Message=Invalid API key, App ID=69afcef0f16365a6c3b0cba4400, Status Code=401, City Name=Birmingham, Country Code=GB}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Birmingham, GB' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="31" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Birmingham, GB' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="verifyWeatherInfoWithNegativeData" duration-ms="216" started-at="2018-03-04T18:17:50Z" data-provider="NegativeTestScenarios" finished-at="2018-03-04T18:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Test Case Name=Verify 'Glasgow, GB' City Info, Error Message=Invalid API key, App ID=69afcef0f16365a6c3b0cba4400, Status Code=401, City Name=Glasgow, Country Code=GB}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test Case Name is: Verify 'Glasgow, GB' City Info]]>
            </line>
            <line>
              <![CDATA[Response is: {"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."}]]>
            </line>
            <line>
              <![CDATA[Verified the error message successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWeatherInfoWithNegativeData -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-04T18:17:50Z" finished-at="2018-03-04T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.apitesting.TestAPI.TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf]" name="afterMethod" is-config="true" duration-ms="20" started-at="2018-03-04T18:17:51Z" finished-at="2018-03-04T18:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWeatherInfoWithNegativeData status=SUCCESS method=TestWeatherAPIWithDataProvider.verifyWeatherInfoWithNegativeData(java.util.Map)[pri:0, instance:com.apitesting.TestAPI.TestWeatherAPIWithDataProvider@d041cf] output=Test Case Name is: Verify 'Glasgow, GB' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.apitesting.TestAPI.TestWeatherAPIWithDataProvider -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
